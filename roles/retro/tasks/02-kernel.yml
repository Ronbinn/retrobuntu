
#Install kernel, disable speaker and configure grub
---
- name: Disable pcspeaker.
  blockinfile:
    create: yes
    dest: "/etc/modprobe.d/nobeep"
    block: |
      blacklist pcspkr

- name: Install xz-utils package.
  apt:
    name: xz-utils

- name: Download kernel debs. Debian 64 bit.
  get_url:
    url: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
     - { src: "https://www.dropbox.com/s/sgjou506ja2p9pf/linux-image-5.15.15_5.15.15-1_amd64.deb?dl=1", dest: "/root/linux_image.deb" }
     - { src: "https://www.dropbox.com/s/gq7n2qwt67wp532/linux-headers-5.15.15_5.15.15-1_amd64.deb?dl=1", dest: "/root/linux_headers.deb" }
     - { src: "https://www.dropbox.com/s/ln0n1if37wfbvlb/linux-libc-dev_5.15.15-1_amd64.deb?dl=1", dest: "/root/linux_libc.deb" }
  when:
    - ansible_distribution == 'Debian'
    - ansible_architecture == 'x86_64'

- name: Download kernel debs. Debian 32 bit.
  get_url:
    url: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
     - { src: "https://www.dropbox.com/s/22hob6usmw4wjdn/linux-image-5.10.21_5.10.21-1_i386.deb?dl=1", dest: "/root/linux_image.deb" }
     - { src: "https://www.dropbox.com/s/ucaonymkpko7mxo/linux-headers-5.10.21_5.10.21-1_i386.deb?dl=1", dest: "/root/linux_headers.deb" }
     - { src: "https://www.dropbox.com/s/q4s2fx93nlgz2yk/linux-libc-dev_5.10.21-1_i386.deb?dl=1", dest: "/root/linux_libc.deb" }
  when:
    - ansible_distribution == 'Debian'
    - ansible_architecture == 'i386'

- name: Download kernel debs. Ubuntu.
  get_url:
    url: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
     - { src: "https://www.dropbox.com/s/sgjou506ja2p9pf/linux-image-5.15.15_5.15.15-1_amd64.deb?dl=1", dest: "/root/linux_image.deb" }
     - { src: "https://www.dropbox.com/s/gq7n2qwt67wp532/linux-headers-5.15.15_5.15.15-1_amd64.deb?dl=1", dest: "/root/linux_headers.deb" }
     - { src: "https://www.dropbox.com/s/ln0n1if37wfbvlb/linux-libc-dev_5.15.15-1_amd64.deb?dl=1", dest: "/root/linux_libc.deb" }
  when: ansible_distribution == 'Ubuntu'

- name: Install 15khz kernel debs.
  apt:
    deb: "{{ item }}"
  with_items:
    - /root/linux_image.deb
    - /root/linux_headers.deb
    - /root/linux_libc.deb
  ignore_errors: yes

- name: Remove deb files.
  file:
    path: "/root/{{ item }}"
    state: absent
  with_items:
    - /root/linux_image.deb
    - /root/linux_headers.deb
    - /root/linux_libc.deb

- name: Remove old kernel links. Debian.
  file:
    path: "/{{ item }}"
    state: absent
  with_items:
    - initrd.img
    - vmlinuz
  when: ansible_distribution == 'Debian'

- name: Create new kernel links. Debian.
  file:
    src: "boot/{{ item }}-5.14.16"
    dest: "/{{ item }}"
    state: link
  with_items:
    - initrd.img
    - vmlinuz
  when: ansible_distribution == 'Debian'

- name: Remove old kernel links. Ubuntu.
  file:
    path: "/boot/{{ item }}"
    state: absent
  with_items:
    - initrd.img
    - vmlinuz
  when: ansible_distribution == 'Ubuntu'

- name: Create new kernel links. Ubuntu.
  file:
    src: "{{ item }}-5.14.16"
    dest: "/boot/{{ item }}"
    state: link
  with_items:
    - initrd.img
    - vmlinuz
  when: ansible_distribution == 'Ubuntu'

- name: Check if there is grub configuration.
  stat:
    path: "/etc/default/grub"
  register: grub

- name: Change grub cmdline defaults for ATI
  replace:
    dest: "/etc/default/grub"
    regexp: '^(.*)GRUB_CMDLINE_LINUX_DEFAULT=(.*)$'
    replace: 'GRUB_CMDLINE_LINUX_DEFAULT="vga=0x311 video=VGA-1:640x480iec"'
  register: grubati
  when:
    - grub.stat.exists == true
    - card == "ati"

- name: Change grub cmdline defaults for INTEL
  replace:
    dest: "/etc/default/grub"
    regexp: '^(.*)GRUB_CMDLINE_LINUX_DEFAULT=(.*)$'
    replace: 'GRUB_CMDLINE_LINUX_DEFAULT="vga=0x311 video=VGA-1:1280x480iec"'
  register: grubintel
  when:
    - grub.stat.exists == true
    - card == "intel"

- name: Update grub config.
  command: /usr/sbin/update-grub
  when: (grubati.changed == true) or (grubintel.changed == true)
